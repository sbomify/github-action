---
name: CI/CD Pipeline

on:
  push:
    branches:
      - master
    tags:
      - v*.*
  pull_request:
    branches:
      - master

env:
  IMAGE_NAME: sbomify-action

jobs:
  sanity-checks:
    name: Sanity Checks
    runs-on: ubuntu-latest
    steps:
      - name: Code Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install UV
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: |
          uv sync --locked --dev

      - name: Run ruff linter
        run: |
            uv run ruff check sbomify_action tests

      - name: Run ruff formatter
        run: |
            uv run ruff format --check sbomify_action tests

  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    steps:
      - name: Code Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install UV
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Install Trivy and Parlay
        env:
          PARLAY_VERSION: 0.8.0
          TRIVY_VERSION: 0.59.1
        run: |
          # Install Parlay
          curl -sL \
            -o parlay_Linux_x86_64.tar.gz \
            "https://github.com/snyk/parlay/releases/download/v${PARLAY_VERSION}/parlay_Linux_x86_64.tar.gz"
          curl -sL \
            -o parlay_checksum.txt \
            "https://github.com/snyk/parlay/releases/download/v${PARLAY_VERSION}/checksums.txt"
          sha256sum --ignore-missing -c parlay_checksum.txt
          tar xvfz parlay_Linux_x86_64.tar.gz
          chmod +x parlay
          sudo mv parlay /usr/local/bin
          rm -f parlay_Linux_x86_64.tar.gz parlay_checksum.txt

          # Install Trivy
          curl -sL \
            -o trivy_${TRIVY_VERSION}_Linux-64bit.tar.gz \
            "https://github.com/aquasecurity/trivy/releases/download/v${TRIVY_VERSION}/trivy_${TRIVY_VERSION}_Linux-64bit.tar.gz"
          curl -sL \
            -o trivy_checksum.txt \
            "https://github.com/aquasecurity/trivy/releases/download/v${TRIVY_VERSION}/trivy_${TRIVY_VERSION}_checksums.txt"
          sha256sum --ignore-missing -c trivy_checksum.txt
          tar xvfz trivy_${TRIVY_VERSION}_Linux-64bit.tar.gz
          chmod +x trivy
          sudo mv trivy /usr/local/bin
          rm -f trivy_${TRIVY_VERSION}_Linux-64bit.tar.gz trivy_checksum.txt

      - name: Load cached venv
        id: cached-uv-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/uv.lock') }}

      - name: Install dependencies
        if: steps.cached-uv-dependencies.outputs.cache-hit != 'true'
        run: uv sync --locked --dev

      - name: Run tests
        run: |
          uv run pytest
        env:
          TOKEN: placeholder
          COMPONENT_ID: placeholder
          UPLOAD: 'false'
          PYTHONPATH: ${{ github.workspace }}

      - name: Build container for enrichment test
        run: |
          docker build . -t gha

      - name: Run enrichment test
        run: |
          docker run --rm \
            -v $(pwd):/github/workspace \
            -w /github/workspace \
            -e TOKEN=placeholder \
            -e COMPONENT_ID=placeholder \
            -e UPLOAD=false \
            -e SBOM_FILE="tests/test-data/syft.cdx.json" \
            -e ENRICH=true \
            gha

  docker-build-checks:
    name: Docker Build/Checks
    runs-on: ubuntu-latest
    steps:
      - name: Code Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Simulate GitHub Actions run.
      # Change `@master` for the hash you want to test.
      - uses: sbomify/github-action@master
        name: Test Run
        env:
          TOKEN: placeholder
          COMPONENT_ID: placeholder
          UPLOAD: false
          SBOM_FILE: tests/test-data/syft.cdx.json

  push-images:
    name: Push Docker Images
    runs-on: ubuntu-latest
    needs: [sanity-checks, integration-tests, docker-build-checks]
    if: github.event_name == 'push'
    permissions:
      packages: write
      contents: read
    steps:
      - uses: actions/checkout@v4

      - name: Build image
        run: docker build . --file Dockerfile --tag $IMAGE_NAME --label "runnumber=${GITHUB_RUN_ID}"

      - name: Log in to registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: sbomifyhub
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push image
        run: |
          set -x
          GITHUB_IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME
          GITHUB_IMAGE_ID=$(echo $GITHUB_IMAGE_ID | tr '[A-Z]' '[a-z]')
          DOCKER_HUB_IMAGE_ID=sbomifyhub/$IMAGE_NAME

          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          [ "$VERSION" == "master" ] && VERSION=latest

          echo VERSION=$VERSION
          docker tag $IMAGE_NAME $GITHUB_IMAGE_ID:$VERSION
          docker tag $IMAGE_NAME $DOCKER_HUB_IMAGE_ID:$VERSION

          docker push $GITHUB_IMAGE_ID:$VERSION
          docker push $DOCKER_HUB_IMAGE_ID:$VERSION

          echo \`\`\` >> ${GITHUB_STEP_SUMMARY}
          echo "Use $GITHUB_IMAGE_ID:$VERSION within GitHub" >> ${GITHUB_STEP_SUMMARY}
          echo "Use $DOCKER_HUB_IMAGE_ID:$VERSION outside of GitHub" >> ${GITHUB_STEP_SUMMARY}
          echo \`\`\` >> ${GITHUB_STEP_SUMMARY}

  upload-sbom:
    name: Upload SBOM
    needs: push-images
    if: github.event_name == 'push'
    permissions:
      id-token: write
      contents: read
      attestations: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Upload SBOM
        uses: sbomify/github-action@master
        env:
          TOKEN: ${{ secrets.SBOMIFY_TOKEN }}
          COMPONENT_ID: 'Gu9wem8mkX'
          LOCK_FILE: 'uv.lock'
          COMPONENT_NAME: 'sbomify-github-action'
          COMPONENT_VERSION: ${{ github.ref_type == 'tag' && github.ref_name || format('{0}-{1}', github.ref_name, github.sha) }}
          AUGMENT: true
          ENRICH: true
          UPLOAD: true
          OUTPUT_FILE: github-action.cdx.json

      - name: Attest
        uses: actions/attest-build-provenance@v1
        with:
          subject-path: '${{ github.workspace }}/github-action.cdx.json'
