---
name: Integration Tests

on:  # yamllint disable-line rule:truthy
  push: null

jobs:
  build:
    name: Integration Tests
    runs-on: ubuntu-latest

    steps:
      - name: Code Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.7.1
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Install Trivy and Parlay
        env:
          PARLAY_VERSION: 0.8.0
          TRIVY_VERSION: 0.59.1
        run: |
          # Install Parlay
          curl -sL \
            -o parlay_Linux_x86_64.tar.gz \
            "https://github.com/snyk/parlay/releases/download/v${PARLAY_VERSION}/parlay_Linux_x86_64.tar.gz"
          curl -sL \
            -o parlay_checksum.txt \
            "https://github.com/snyk/parlay/releases/download/v${PARLAY_VERSION}/checksums.txt"
          sha256sum --ignore-missing -c parlay_checksum.txt
          tar xvfz parlay_Linux_x86_64.tar.gz
          chmod +x parlay
          sudo mv parlay /usr/local/bin
          rm -f parlay_Linux_x86_64.tar.gz parlay_checksum.txt

          # Install Trivy
          curl -sL \
            -o trivy_${TRIVY_VERSION}_Linux-64bit.tar.gz \
            "https://github.com/aquasecurity/trivy/releases/download/v${TRIVY_VERSION}/trivy_${TRIVY_VERSION}_Linux-64bit.tar.gz"
          curl -sL \
            -o trivy_checksum.txt \
            "https://github.com/aquasecurity/trivy/releases/download/v${TRIVY_VERSION}/trivy_${TRIVY_VERSION}_checksums.txt"
          sha256sum --ignore-missing -c trivy_checksum.txt
          tar xvfz trivy_${TRIVY_VERSION}_Linux-64bit.tar.gz
          chmod +x trivy
          sudo mv trivy /usr/local/bin
          rm -f trivy_${TRIVY_VERSION}_Linux-64bit.tar.gz trivy_checksum.txt

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --with dev

      - name: Run tests
        run: |
          poetry run pytest
        env:
          TOKEN: placeholder
          COMPONENT_ID: placeholder
          UPLOAD: 'false'
          PYTHONPATH: ${{ github.workspace }}

      - name: Build container for enrichment test
        run: |
          docker build . -t gha

      - name: Run enrichment test
        run: |
          docker run --rm \
            -v $(pwd):/github/workspace \
            -w /github/workspace \
            -e TOKEN=placeholder \
            -e COMPONENT_ID=placeholder \
            -e UPLOAD=false \
            -e SBOM_FILE="tests/test-data/syft.cdx.json" \
            -e ENRICH=true \
            gha
